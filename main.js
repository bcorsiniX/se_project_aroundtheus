!function(){"use strict";class e{constructor(e,t){this._formElement=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=this._formElement.querySelectorAll(e.inputSelector)}_showInputError(e){let t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){let t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){this._inputList.forEach((e=>{if(!e.validity.valid)return e}))}toggleButtonState(e){this._hasInvalidInput(e)?this.disableSubmitButton():this._enableSubmitButton()}resetValidation(){this.toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t,n){this.name=e.name,this.link=e.link,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteCard())),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this.name,this.link)}))}_handleLikeIcon(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._element.remove()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._element=this._getTemplate(),this._element.querySelector(".card__image").src=this.link,this._element.querySelector(".card__image").alt=this.name,this._element.querySelector(".card__title").textContent=this.name,this._setEventListeners(),this._element}}class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("click",this._handleClickOverlay),document.addEventListener("keydown",this._closeModalEsc)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("click",this._handleClickOverlay),document.removeEventListener("keydown",this._closeModalEsc)}_closeModalEsc=e=>{"Escape"===e.key&&this.close()};_handleClickOverlay=e=>{e.target===this._popupElement&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}}class s extends n{constructor(e,t){let{popupSelector:n}=e;super({popupSelector:n}),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._inputValues=this._form.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputValues.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset()})),super.setEventListeners()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=document.querySelector("#profile-edit-button"),r=document.forms["modal-form"],l=document.querySelector("#newPlaceButton"),a=document.forms["newPlaceModal-form"],c=(document.querySelector("#imageModal"),document.querySelector("#profile-name-input")),u=document.querySelector("#profile-description-input");function m(e){const n=new t(e,"#card-template",d).getView();return _.addItem(n),n}function d(e,t){v.open(e,t)}const _=new class{constructor(e,t){let{items:n,renderer:s}=e;this._items=n,this._container=document.querySelector(t),this._renderer=s}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:m},"#cards-list"),p=new s({popupSelector:"#profileEditModal"},(function(e){S.setUserInfo(e),p.close()})),h=new e(i,r),E=new e(i,a),S=new class{constructor(e){let{nameSelector:t,descriptionSelector:n}=e;this._descriptionElement=document.querySelector(n),this._nameElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent.trim(),description:this._descriptionElement.textContent.trim()}}setUserInfo(e){this._nameElement.textContent=e.title,this._descriptionElement.textContent=e.description}}({nameSelector:"#profile-name",descriptionSelector:"#profile-description"}),v=new class extends n{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupElement,this._image=document.querySelector(".modal__image"),this._caption=document.querySelector(".modal__caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}({popupSelector:"#imageModal"}),f=new s({popupSelector:"#newPlaceModal"},(function(e){m({name:e.title,link:e.link}),f.close()}));_.renderItems(),h.enableValidation(),E.enableValidation(),v.setEventListeners(),p.setEventListeners(),f.setEventListeners(),l.addEventListener("click",(()=>{f.open(),E.toggleButtonState()})),o.addEventListener("click",(()=>{const e=S.getUserInfo();c.value=e.name,u.value=e.description,p.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,